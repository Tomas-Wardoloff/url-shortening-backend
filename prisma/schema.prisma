generator client {
  provider = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique  
  firstName String
  lastName String
  joinDate DateTime @default(now())
  lastLogin DateTime?
  password String
  isVerified Boolean @default(false)
  limitLinks Int @default(30)
  links Links[]
  tokens RefreshToken[]
  tags Tags[]
}

model RefreshToken {
  id Int @id @default(autoincrement())
  hashedToken String @unique
  revoked Boolean @default(false)
  expiresAt DateTime
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Links{
  id Int @id @default(autoincrement())
  url String
  shortCode String? @unique
  description String?
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  clicks Int @default(0)
  tags TagsOnLinks[]

  @@index(shortCode)
  @@index([userId])   
}

model Tags{
  id Int @id @default(autoincrement())
  name String @unique
  createdAt DateTime @default(now())
  creatorId Int 
  creator User @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  links TagsOnLinks[]

  @@index([creatorId])
}

model TagsOnLinks{
  tagId Int
  tag Tags @relation(fields: [tagId], references: [id], onDelete: Cascade)
  linkId Int
  link Links @relation(fields: [linkId], references: [id], onDelete: Cascade)
  @@id([tagId, linkId])
}