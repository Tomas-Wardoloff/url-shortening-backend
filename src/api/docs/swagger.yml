openapi: 3.0.4
info:
  title: URL Shortening API
  description: |-
    A RESTful API that allows users to shorten long URLs, manage tags, and perform operations related to URL management.

    Some useful links:
    - [The API repository](https://github.com/Tomas-Wardoloff/url-shortening-backend)
  contact:
    name: Tomas Wardoloff
    email: tomaswardoloff@gmail.com
  license:
    name: GPL-3.0 license
    url: https://github.com/Tomas-Wardoloff/url-shortening-backend/blob/main/LICENSE
  version: 1.0.0

servers:
  - url: https://petstore3.swagger.io/api/v3

tags:
  - name: URLs
    description: Operations about URLs
  - name: Tags
    description: Operations about Tags
  - name: User
    description: Operations about users

paths:
  /api/url/shorten:
    post:
      tags:
        - URLs
      summary: Shorten an URL
      description: Create a short URL
      requestBody:
        description: Data required to shorten an URL
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: "https://example.com/some/long/url"
                description:
                  type: string
                  example: "A description for the shortened URL"
                customAlias:
                  type: string
                  example: "custom-alias"
              required:
                - url
      responses:
        "201":
          description: URL successfully shortened
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "URL shortened"
                  data:
                    type: object
                    properties:
                      url:
                        type: string
                        example: "https://example.com/some/long/url"
                      shortCode:
                        type: string
                        example: "abc123"
                      description:
                        type: string
                        example: "A description for the shortened URL"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2023-10-01T12:00:00Z"
        "400":
          description: Bad request (e.g., Invalid URL or Custom alias already exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid URL"
        "403":
          description: Forbidden (e.g., Limit of links reached)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Limit of links reached"
        "404":
          description: Not found (e.g., User not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /api/url/{shortCode}:
    get:
      tags:
        - URLs
      summary: Redirect to URL
      description: Redirect to the original URL using the short code
      parameters:
        - name: shortCode
          in: path
          required: true
          description: The short code of the URL to retrieve
          schema:
            type: string
            example: "abc123"
      responses:
        "301":
          description: Redirect to the original URL
        "404":
          description: Not found (e.g., URL not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "URL not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
    put:
      tags:
        - URLs
      summary: Update an URL
      description: Update the details of a shortened URL
      parameters:
        - name: shortCode
          in: path
          required: true
          description: The short code of the URL to retrieve
          schema:
            type: string
      requestBody:
        description: Data to update an URL
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: "https://example.com/some/long/url"
                description:
                  type: string
                  example: "A description for the shortened URL"
                customAlias:
                  type: string
                  example: "custom-alias"
              required:
                - url
      responses:
        "200":
          description: URL successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "URL updated"
                  data:
                    type: object
                    properties:
                      url:
                        type: string
                        example: "https://example.com/some/long/url"
                      shortCode:
                        type: string
                        example: "abc123"
                      description:
                        type: string
                        example: "A description for the shortened URL"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2023-10-01T12:00:00Z"
        "400":
          description: Bad request (e.g., Invalid URL or Short code already exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid URL"
        "403":
          description: Forbidden (e.g., Action not authorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Action not authorized"
        "404":
          description: Not found (e.g., URL not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "URL not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
    delete:
      tags:
        - URLs
      summary: Delete an URL
      description: Delete a shortened URL
      parameters:
        - name: shortCode
          in: path
          required: true
          description: The short code of the URL to retrieve
          schema:
            type: string
      responses:
        "204":
          description: URL deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "URL deleted"
        "403":
          description: Forbidden (e.g., Action not authorized)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Action not authorized"
        "404":
          description: Not found (e.g., URL not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "URL not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /api/url/user:
    get:
      tags:
        - URLs
      summary: Get all URLs for a user
      description: Retrieve all shortened URLs for a specific user
      parameters:
        - name: userId
          in: query
          required: true
          description: The ID of the user to retrieve URLs for
          schema:
            type: string
            example: "1564"
      responses:
        "200":
          description: Retrieved URLs
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All user urls"
                  data:
                    type: object
                    properties:
                      urls:
                        type: object
                        properties:
                          url:
                            type: string
                            example: "https://example.com/some/long/url"
                          shortCode:
                            type: string
                            example: "abc123"
                          description:
                            type: string
                            example: "A description for the shortened URL"
                          createdAt:
                            type: string
                            format: date-time
                            example: "2023-10-01T12:00:00Z"
                          clicks:
                            type: integer
                            example: 100
        "404":
          description: Not found (e.g., User not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /api/url/{shortCode}/tag/{tagId}:
    post:
      tags:
        - URLs
      summary: Add a tag to a URL
      description: Add a tag to a shortened URL
      parameters:
        - name: shortCode
          in: path
          required: true
          description: The short code of the URL to add the tag to
          schema:
            type: string
            example: "abc123"
        - name: tagId
          in: path
          required: true
          description: The ID of the tag to add to the URL
          schema:
            type: string
            example: "156"
      responses:
        "200":
          description: Tag assigned to URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tag assigned to URL"
        "400":
          description: Bad request (e.g., Invalid tag id)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid tag id"
        "403":
          description: Forbidden (e.g., Action not authorized or Tag already assigned)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Action not authorized"
        "404":
          description: Not found (e.g., URL or tag not found)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "URL not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
